<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:local="clr-namespace:GoldenBook;assembly=GoldenBook"
             xmlns:conv="clr-namespace:GoldenBook.Converters;assembly=GoldenBook"
             xmlns:behaviors="clr-namespace:GoldenBook.Behaviors;assembly=GoldenBook"
             x:Class="GoldenBook.Views.AdvertisersFormPage"
             Title="Saisie d'un sponsor"
             BindingContext="{Binding Source={x:Static local:App.Locator}, Path=AdvertisersForm}">

  <ContentPage.Resources>
    <ResourceDictionary>
      <conv:BooleanInverterConverter x:Key="booleanInverter" />
    </ResourceDictionary>
  </ContentPage.Resources>

  <Grid>
    
    <ScrollView>

      <StackLayout VerticalOptions="Start" Padding="10">

        <StackLayout Padding="0,0,0,10">
          <Entry x:Name="nameEntry" Placeholder="Nom du sponsor" Keyboard="Text" Text="{Binding Name}">
            <Entry.Behaviors>
              <behaviors:TextValidatorBehavior x:Name="nameValidator" /> <!-- At least the name must be filled -->
            </Entry.Behaviors>
          </Entry>
          <Entry x:Name="emailEntry" Placeholder="Adresse e-mail du sponsor" Keyboard="Email" Text="{Binding Email}">
            <Entry.Behaviors>
              <behaviors:EmailValidatorBehavior x:Name="emailValidator" IsNullAllowed="True" />
            </Entry.Behaviors>
          </Entry>
          <Entry x:Name="amountEntry" Placeholder="Montant du don" Keyboard="Numeric" Text="{Binding Amount}">
            <Entry.Behaviors>
              <behaviors:NumberValidatorBehavior x:Name="amountValidator" />
            </Entry.Behaviors>
          </Entry>
          <Entry x:Name="addedByEntry" Placeholder="Ajouté par" Keyboard="Text" Text="{Binding AddedBy}" />
          <StackLayout Padding="0,12,0,0" Orientation="Vertical">
            <Label x:Name="MessageLabel" Text="Message :" />
            <Editor x:Name="messageEditor" Text="{Binding Message}" Keyboard="Text" />
          </StackLayout>
        </StackLayout>

        <Grid Padding="0,10,0,0">
          <ActivityIndicator HorizontalOptions="Center"
                             VerticalOptions="Center"
                             IsRunning="{Binding IsActivityIndicatorVisible}"
                             x:Name="syncIndicator"/>
        
          <StackLayout Padding="0" IsVisible="{Binding IsActivityIndicatorVisible, Converter={StaticResource booleanInverter}}">
            <Button Text="Prendre une photo" Command="{Binding TakePictureCommand}" />
            
            <!-- The property IsEnabled is ignored when the Button is directly binded to an ICommand, so the command is called from the Click event -->
            <Button Text="Envoyer" IsEnabled="False" Clicked="OnButtonSendClicked" >
              <Button.Triggers>
                <MultiTrigger TargetType="Button">
                  <MultiTrigger.Conditions>
                    <BindingCondition Binding="{Binding Source={x:Reference nameValidator}, Path=IsValid}" Value="true"></BindingCondition>
                    <BindingCondition Binding="{Binding Source={x:Reference emailValidator}, Path=IsValid}" Value="true"></BindingCondition>
                    <BindingCondition Binding="{Binding Source={x:Reference amountValidator}, Path=IsValid}" Value="true"></BindingCondition>
                  </MultiTrigger.Conditions>
                  <Setter Property="IsEnabled" Value="True"></Setter>
                </MultiTrigger>
              </Button.Triggers>
            </Button>
            <Image Source="{Binding ImageSource}" />
          </StackLayout>
        </Grid>

      </StackLayout>
    </ScrollView>
  
  </Grid>

</ContentPage>